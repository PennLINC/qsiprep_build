version: 2.1

build: &build
  docker:
    - image: cimg/base:2020.09
  working_directory: /tmp/src/qsiprep_build
  steps:
    - checkout
    - setup_remote_docker:
        version: docker24
    - run:
        name: Check whether build should be skipped
        command: |
          if [[ -n "$CIRCLE_TAG" ]]; then
            source setup_build.sh
            required_tag=$(printenv ${VERSION_TAG})
            needs_build=1
            # Do we need to build this?
            dpkg --compare-versions "${required_tag}" lt "${CIRCLE_TAG}" \
                && needs_build=0

            echo "needs_build=${needs_build}"
            echo "required_tag=${required_tag}"
            echo "CIRCLE_TAG=${CIRCLE_TAG}"

            if [[ ${needs_build} -eq 0 ]]; then
              echo "Older version of dependency already exists, no need to build"
              circleci-agent step halt
            fi
          else
            echo "skipping non-tagged versions"
            circleci-agent step halt
          fi

    - run:
        name: Build and push
        no_output_timeout: 2h
        command: |
          source setup_build.sh
          DOCKER_BUILDKIT=1 \
          BUILDKIT_PROGRESS=plain \
          docker build \
            --rm=false \
            -f ${BUILD_FILE} \
            --build-arg TAG_ANTS=${TAG_ANTS} \
            -t pennlinc/${IMG_NAME}:${CIRCLE_TAG} .

          if [[ -n "$DOCKER_PASS" ]]; then
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push pennlinc/${IMG_NAME}:$CIRCLE_TAG
          fi

jobs:

  build_FSL:
    environment:
      VERSION_TAG: "TAG_FSL"
      IMG_NAME: "qsiprep-fsl"
      BUILD_FILE: "Dockerfile_FSLconda"
    <<: *build

  build_FreeSurfer:
    environment:
      VERSION_TAG: "TAG_FREESURFER"
      IMG_NAME: "qsiprep-freesurfer"
      BUILD_FILE: "Dockerfile_FreeSurfer"
    <<: *build

  build_3Tissue:
    environment:
      VERSION_TAG: "TAG_3TISSUE"
      IMG_NAME: "qsiprep-3tissue"
      BUILD_FILE: "Dockerfile_3Tissue"
    <<: *build

  build_MRtrix3:
    environment:
      VERSION_TAG: "TAG_MRTRIX3"
      IMG_NAME: "qsiprep-mrtrix3"
      BUILD_FILE: "Dockerfile_MRtrix3"
    <<: *build

  build_AFNI:
    environment:
      VERSION_TAG: "TAG_AFNI"
      IMG_NAME: "qsiprep-afni"
      BUILD_FILE: "Dockerfile_AFNI"
    <<: *build

  build_DSIStudio:
    environment:
      VERSION_TAG: "TAG_DSISTUDIO"
      IMG_NAME: "qsiprep-dsistudio"
      BUILD_FILE: "Dockerfile_DSIStudio"
    <<: *build

  build_ANTs:
    environment:
      VERSION_TAG: "TAG_ANTS"
      IMG_NAME: "qsiprep-ants"
      BUILD_FILE: "Dockerfile_ANTs"
    resource_class: large
    <<: *build

  build_Miniconda:
    environment:
      VERSION_TAG: "TAG_MINICONDA"
      IMG_NAME: "qsiprep-miniconda"
      BUILD_FILE: "Dockerfile_Miniconda"
    <<: *build

  build_Micromamba:
    environment:
      VERSION_TAG: "TAG_MICROMAMBA"
      IMG_NAME: "qsiprep-micromamba"
      BUILD_FILE: "Dockerfile_Micromamba"
    <<: *build

  build_TORTOISE:
    environment:
      VERSION_TAG: "TAG_TORTOISE"
      IMG_NAME: "qsiprep-drbuddi"
      BUILD_FILE: "Dockerfile_TORTOISE"
    <<: *build

  build_TORTOISECUDA:
    environment:
      VERSION_TAG: "TAG_TORTOISECUDA"
      IMG_NAME: "qsiprep-drbuddicuda"
      BUILD_FILE: "Dockerfile_TORTOISEcuda"
    <<: *build

  build_SYNB0:
    environment:
      VERSION_TAG: "TAG_SYNB0"
      IMG_NAME: "qsiprep-synb0"
      BUILD_FILE: "Dockerfile_SynB0"
    <<: *build

  build:
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
    docker:
      - image: cimg/base:2020.09
    working_directory: /tmp/src/qsiprep_build
    steps:
      - checkout
      - setup_remote_docker:
         version: docker24

      - run:
          name: Build with FSL and push
          no_output_timeout: 5h
          command: |
            if [[ -n "$CIRCLE_TAG" ]]; then
              source setup_build.sh
              do_build build_fsl
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push pennlinc/qsiprep_build:$CIRCLE_TAG
            fi

  build_nofsl:
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
    docker:
      - image: cimg/base:2020.09
    working_directory: /tmp/src/qsiprep_build
    steps:
      - checkout
      - setup_remote_docker:
         version: docker24

      - run:
          name: Build without FSL and push
          no_output_timeout: 5h
          command: |
            if [[ -n "$CIRCLE_TAG" ]]; then
              source setup_build.sh
              do_build no_fsl
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push pennlinc/qsiprep_build:${CIRCLE_TAG}-nofsl
            fi

  deployable:
    docker:
      - image: busybox:latest
    steps:
      - run: echo Deploying!

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_FSL:
          filters:
            tags:
              only: /.*/

      - build_FreeSurfer:
          filters:
            tags:
              only: /.*/

      - build_3Tissue:
          filters:
            tags:
              only: /.*/

      - build_MRtrix3:
          filters:
            tags:
              only: /.*/

      - build_DSIStudio:
          filters:
            tags:
              only: /.*/

      - build_ANTs:
          filters:
            tags:
              only: /.*/

      - build_AFNI:
          filters:
            tags:
              only: /.*/

      - build_Micromamba:
          filters:
            tags:
              only: /.*/

      - build_SYNB0:
          filters:
            tags:
              only: /.*/

      - build_TORTOISE:
          requires:
            - build_ANTs
          filters:
            tags:
              only: /.*/

      - build_TORTOISECUDA:
          requires:
            - build_ANTs
          filters:
            tags:
              only: /.*/

      - deployable:
          requires:
            - build_FSL
            - build_FreeSurfer
            - build_3Tissue
            - build_MRtrix3
            - build_DSIStudio
            - build_ANTs
            - build_Micromamba
            - build_AFNI
            - build_TORTOISE
            - build_TORTOISECUDA
            - build_SYNB0
          filters:
            tags:
              only: /.*/

      - build:
          requires:
            - deployable
          filters:
            tags:
              only: /.*/

      - build_nofsl:
          requires:
            - deployable
          filters:
            tags:
              only: /.*/